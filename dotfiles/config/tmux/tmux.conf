# Tested on tmux version 3.5.a

################################################################################
#                                                                              #
# General Configs                                                              #
#                                                                              #
################################################################################

# Manually handle clipboard management
set-option -g set-clipboard off

# Don't wait for escape key as part of a key sequence
set -sg escape-time 0

# Capture some more history
set -g history-limit 50000

# Don't wrap searches
set-window-option -g wrap-search off

# Only show pane numbers for 300 milliseconds
set -g display-panes-time 300

################################################################################
##                                                                            ##
##  Theming                                                                   ##
##                                                                            ##
################################################################################

source-file ~/.config/tmux/theme.conf
source-file ~/.config/tmux/colors.conf

################################################################################
##                                                                            ##
##  Windowing                                                                 ##
##                                                                            ##
################################################################################

# automatically renumber window numbers on closing a pane (tmux >= 1.7)
set -g renumber-windows on

# start window and pane numbering at 1
set -g base-index 1
set -g pane-base-index 1

# dynamically update iTerm tab and window titles
set -g set-titles on

# define the window title format
set -g set-titles-string "#T : #h > #S > #W"

# send focus events through
set -g focus-events on

# set the window list format in status bar
set -g window-status-format "#I:#{window_panes} #W#F"
set -g window-status-current-format "#I:#{window_panes} #W#F"
set -g window-status-separator "  "

# flag activity in the window list
setw -g monitor-activity on

################################################################################
#                                                                              #
# Status Bar                                                                   #
#                                                                              #
################################################################################

# status bar left side
set-option -g status-left-length 100
set-option -g status-left ' #S   ⧉ #I/#{session_windows} ⊞ #P/#{window_panes}   '

# status bar right side
set-option -g status-right-length 100
set-option -g status-right "#[fg=yellow] #(pmset -g batt | awk 'NR==2 {print $3}' | sed 's/\;//') #[fg=blue] [#{pane_width}x#{pane_height}] #[fg=brightgreen] %H:%M #[fg=white] #(date -u '+%%H:%%M %%d-%%b-%%y') "

################################################################################
#                                                                              #
#  MOUSE                                                                       #
#                                                                              #
#  Shift + Mouse drag to use terminal native selection, else will enter        #
#  tmux copy mode.                                                             #
#                                                                              #
#  MOUSEDOWN1  --->  MouseDown1         MOUSEDRAG1     --->  MouseDrag1        #
#  MOUSEDOWN2  --->  MouseDown2         MOUSEDRAG2     --->  MouseDrag2        #
#  MOUSEDOWN3  --->  MouseDown3         MOUSEDRAG3     --->  MouseDrag3        #
#  MOUSEUP1    --->  MouseUp1           MOUSEDRAGEND1  --->  MouseDragEnd1     #
#  MOUSEUP2    --->  MouseUp2           MOUSEDRAGEND2  --->  MouseDragEnd2     #
#  MOUSEUP3    --->  MouseUp3           MOUSEDRAGEND3  --->  MouseDragEnd3     #
#  WHEELUP     --->  WheelUp            WHEELDOWN      --->  WheelDown         #
#                                                                              #
#  Each should be combined with a suffix to id location, Pane, Status, etc.    #
#                                                                              #
################################################################################

# Enable mouse support
set-option -g mouse on

##############################
#  Disable Default Behavior  #
##############################

# Unbind all double and triple clicks
unbind-key -T copy-mode-vi DoubleClick1Pane
unbind-key -T copy-mode-vi TripleClick1Pane
unbind-key -T root DoubleClick1Pane
unbind-key -T root TripleClick1Pane
unbind-key -T copy-mode DoubleClick1Pane
unbind-key -T copy-mode TripleClick1Pane

# Remove default middle-click behavior
unbind-key -T root MouseUp2Pane
unbind-key -T copy-mode-vi MouseUp2Pane

# Remove default drag-end behavior to prevent exiting copy mode
unbind-key -T copy-mode-vi MouseDragEnd1Pane

###########################
#  Mouse Wheel Scrolling  #
###########################

# Scroll 3 lines at a time with mouse wheel (default is 5)
# Clear any existing selection before scrolling to prevent extending selections
bind-key -T copy-mode-vi WheelUpPane send-keys -X clear-selection \; send-keys -X -N 3 scroll-up
bind-key -T copy-mode-vi WheelDownPane send-keys -X clear-selection \; send-keys -X -N 3 scroll-down

########################
#  Copy Mode Bindings  #
########################

# Allow Escape to exit copy mode (in addition to default C-c and q)
bind-key -T copy-mode-vi Escape send-keys -X cancel

# Middle-click: exit copy mode and paste, or just paste in normal mode
bind-key -T copy-mode-vi MouseUp2Pane send-keys -X cancel \; paste-buffer

###########################
#  Copy Bindings (macOS)  #
###########################

# Copy selected text to system clipboard when mouse drag ends
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-no-clear "reattach-to-user-namespace\ pbcopy"

# Double-click: select word and copy to clipboard
bind-key -T copy-mode-vi DoubleClick1Pane \
  if-shell -Ft"{mouse}" "#{alternate_on}" \
    "send-keys -M" \
    "send-keys -t\"{mouse}\" -X select-word \; send-keys -X copy-pipe-no-clear \"reattach-to-user-namespace\ pbcopy\""

bind-key -T root DoubleClick1Pane \
  if-shell -Ft"{mouse}" "#{alternate_on}" \
    "send-keys -M" \
    "copy-mode -t\"{mouse}\" \; send-keys -t\"{mouse}\" -X select-word \; send-keys -X copy-pipe-no-clear \"reattach-to-user-namespace\ pbcopy\""

# Triple-click: select entire line and copy to clipboard
bind-key -T copy-mode-vi TripleClick1Pane \
  if-shell -Ft"{mouse}" "#{alternate_on}" \
    "send-keys -M" \
    "send-keys -t\"{mouse}\" -X select-line \; send-keys -X copy-pipe-no-clear \"reattach-to-user-namespace\ pbcopy\""

bind-key -T root TripleClick1Pane \
  if-shell -Ft"{mouse}" "#{alternate_on}" \
    "send-keys -M" \
    "copy-mode -t\"{mouse}\" \; send-keys -t\"{mouse}\" -X select-line \; send-keys -X copy-pipe-no-clear \"reattach-to-user-namespace\ pbcopy\""

###########################
#  Copy Bindings (Linux)  #
###########################

# # Copy selected text to system clipboard when mouse drag ends
# bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-no-clear "xclip"
#
# # Double-click: select word and copy to clipboard
# bind-key -T copy-mode-vi DoubleClick1Pane \
#   if-shell -Ft"{mouse}" "#{alternate_on}" \
#     "send-keys -M" \
#     "send-keys -t\"{mouse}\" -X select-word \; send-keys -X copy-pipe-no-clear \"xclip\""
#
# bind-key -T root DoubleClick1Pane \
#   if-shell -Ft"{mouse}" "#{alternate_on}" \
#     "send-keys -M" \
#     "copy-mode -t\"{mouse}\" \; send-keys -t\"{mouse}\" -X select-word \; send-keys -X copy-pipe-no-clear \"xclip\""
#
# # Triple-click: select entire line and copy to clipboard
# bind-key -T copy-mode-vi TripleClick1Pane \
#   if-shell -Ft"{mouse}" "#{alternate_on}" \
#     "send-keys -M" \
#     "send-keys -t\"{mouse}\" -X select-line \; send-keys -X copy-pipe-no-clear \"xclip\""
#
# bind-key -T root TripleClick1Pane \
#   if-shell -Ft"{mouse}" "#{alternate_on}" \
#     "send-keys -M" \
#     "copy-mode -t\"{mouse}\" \; send-keys -t\"{mouse}\" -X select-line \; send-keys -X copy-pipe-no-clear \"xclip\""

################################################################################
##                                                                            ##
##  Plugins                                                                   ##
##                                                                            ##
################################################################################

run-shell ~/.config/tmux/plugins/tmux-resurrect/resurrect.tmux
run-shell ~/.config/tmux/plugins/tmux-continuum/continuum.tmux

################################################################################
#                                                                              #
# BINDINGS                                                                     #
#                                                                              #
################################################################################

# remap prefix to ctrl + space
unbind-key C-b
set -g prefix C-Space
bind-key Space send-prefix

# use vi navigation and search in scroll mode ctrl-b [
setw -g mode-keys vi
set -g status-keys vi
bind-key -T edit-mode-vi Up send-keys -X history-up
bind-key -T edit-mode-vi Down send-keys -X history-down

# pre-defined sessions ctrl-b [N]
bind-key A source-file ~/.config/tmux/scripts/administration
bind-key D source-file ~/.config/tmux/scripts/development
bind-key L source-file ~/.config/tmux/scripts/logs
bind-key G source-file ~/.config/tmux/scripts/gifcast
bind-key W source-file ~/.config/tmux/scripts/work

# balance splits
unbind-key h
unbind-key v
bind-key h select-layout even-horizontal
bind-key v select-layout even-vertical

# toggle popup window
bind-key P if-shell -F '#{==:#{session_name},HOME}' { detach-client } \
    { popup -w85% -h85% -E 'tmux attach -t HOME || tmux new -s HOME' }

# clear panes
unbind-key y
bind-key y set-window-option synchronize-panes on\; send-keys clear\r\; set-window-option synchronize-panes off

# toggle synchronize panes
bind-key S set-window-option synchronize-panes

# reload config file with ctrl-b r
bind-key r source-file ~/.config/tmux/tmux.conf

# sessions
bind-key C new-session
bind-key L switch-client -l

################################################################################
##                                                                            ##
##  Problematic Bindings                                                      ##
##                                                                            ##
##  The following should be kept at the bottom of the file. While they are    ##
##  "correct" in that they work, something about them break the syntax        ##
##  highlighting provided by treesitter and causes all subsequent configs     ##
##  to be garbled in the editor highlighting wise.                            ##
##                                                                            ##
################################################################################

# Smart pane switching with awareness of Vim splits
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R

# rebind splits so that they open with the same dir
bind-key '"' split-window -c '#{pane_current_path}'
bind-key % split-window -h -c '#{pane_current_path}'
