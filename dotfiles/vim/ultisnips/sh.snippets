#####################
# TERNARY OPERATORS #
#####################

snippet =?:
endsnippet

snippet ?:
endsnippet

############
# COMMENTS #
############

snippet /**
#
# ${0}
#
endsnippet

snippet /*
#
# ${0}
#
endsnippet

snippet @par "parameter comment block"
@param {${1:type}} ${2:name} - ${0:description}
endsnippet

snippet @ret "return comment block"
@return {${1:type}} ${0:description}
endsnippet

################
# FLOW CONTROL #
################

snippet wh "while loop frame"
while [[ ${1:condition} ]]; do
  ${0:#statements}
done
snippet do
endsnippet

snippet switch "switch statement frame"
case ${1:word} in
  ${2:pattern} )
    ${0}
    ;;
esac
endsnippet

snippet case "case statement frame"
${2:pattern} )
  ${0}
  ;;
endsnippet

snippet for "standard for loop frame"
for (( ${2:i} = 0; $2 < ${1:count}; $2++ )); do
  ${0:#statements}
done
endsnippet

snippet fori "array for loop frame"
for ${1:needle} in ${2:haystack} ; do
  ${0:#statements}
done
endsnippet

snippet if "if statement frame"
if [[ ${1:condition} ]]; then
  ${0:#statements}
fi
endsnippet

snippet ife "if else statement frame"
if [[ ${1:condition} ]]; then
  ${2:#statements}
else
  ${3:#statements}
fi
endsnippet

snippet elif "else if statement"
elif [[ ${1:condition} ]]; then
  ${0:#statements}
endsnippet

snippet until "until loop frame"
until [[ ${1:condition} ]]; do
  ${0:#statements}
done
endsnippet

#############
# FUNCTIONS #
#############

#######################
# CLASSES OBJECTS ETC #
#######################

#############
# DEBUGGING #
#############

#################
# MISCELLANEOUS #
#################
