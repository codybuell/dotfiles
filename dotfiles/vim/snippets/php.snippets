#################
# MISCELLANEOUS #
#################
snippet php
	<?php
snippet re
	return ${1:'hello world'};
#####################
# TERNARY OPERATORS #
#####################
snippet =?:
	$${1:foo} = ${2:true} ? ${3:a} : ${0};
snippet ?:
	${1:true} ? ${2:a} : ${0}
############
# COMMENTS #
############
snippet /*
	/*
	|--------------------------------------------------------------------------
	| ${1}
	|--------------------------------------------------------------------------
	|
	| ${2}
	|
	*/
	
	${0}
snippet /**
	/**
	 * ${0:description}
	 *
	 */
snippet @par
	@param {${1:type}} ${2:name} ${0:description}
snippet @ret
	@return {${1:type}} ${0:description}
################
# FLOW CONTROL #
################
snippet wh
	while (${1:true}) {
		${0}
	}
snippet do
	do {
		${0}
	} while (${1:true});
snippet switch
	switch ($${1:var}) {
		case '${2:value}':
			${3}
			break;
		${0}
		default:
			${4}
			break;
	}
snippet case
	case '${1:value}':
		${2}
		break;
snippet for
	for ($${2:i} = 0; $$2 < ${1:count}; $$2${3:++}) {
		${0}
	}
snippet foreach
	foreach ($${1:variable} as $${2:value}) {
		${0}
	}
snippet foreachk
	foreach ($${1:variable} as $${2:key} => $${3:value}) {
		${0}
	}
snippet if
	if (${1:true}) {
		${0}
	}
snippet ifn
	if (!${1:true}) {
		${2}
	}
snippet ife
	if (${1:true}) {
		${2}
	} else {
		${3}
	}
	${0}
snippet el
	else {
		${0}
	}
snippet eif
	elseif (${1:true}) {
		${0}
	}
#############
# FUNCTIONS #
#############
#######################
# CLASSES OBJECTS ETC #
#######################
#############
# DEBUGGING #
#############
###########
# LARAVEL #
###########
# miscellaneous
snippet $
	$this->${1}
# methods
snippet met
	public function ${1:methodName}() {
	  ${0}
	}
snippet pmet
	protected function ${1:methodName}() {
	  ${0}
	}
snippet smet
	public static function ${1:methodName}() {
	  ${0}
	}
# routing
snippet rg
	Route::get('${1:/}', ['as' => '${2:alias}', 'uses' => '${3}Controller@${4:method}']);
snippet rgc
	Route::get('${1:/}', ['as' => '${2:alias}', 'uses' => function() {
	  ${0}
	}]);
snippet rga
	Route::get('${1:/}', ['as' => '${2:alias}', 'uses' => function() {
	  ${0}
	}]);
snippet rgv
	Route::get('${1:/}/{${2:var}}', ['as' => '${2:alias}', 'uses' => '${3}Controller@${4:method}']);
snippet rgvc
	Route::get('${1:/}/{${2:var}}', ['as' => '${2:alias}', 'uses' => function($$2) {
	  ${0}
	}]);
snippet rgva
	Route::get('${1:/}/{${2:var}}', ['as' => '${2:alias}', 'uses' => function($$2) {
	  ${0}
	}]);
snippet rr
	Route::resource('${1:/}', '${2}Controller');
snippet rp
	Route::post('${1:/}', ['as' => '${2:alias}', 'uses' => '${3}Controller@${4:method}']);
snippet rpc
	Route::post('${1:/}', ['as' => '${2:alias}', 'uses' => function() {
	  ${0}
	}]);
snippet rpa
	Route::post('${1:/}', ['as' => '${2:alias}', 'uses' => function() {
	  ${0}
	}]);
snippet rgrp
	Route::group(['middleware' => '${1:auth}', 'prefix' => '${2:admin}'], function() {
	  ${0}
	});
# views
snippet rv
	return view('${1:view.name}', [
	  '${2:var}' => $${3:$2},
	]);
snippet rvs
	return view('${1:view}');${0}
# schemas
snippet sc
	Schema::create('${1:table}', function(Blueprint $table)
	{
		$table->increments('id');
		$table->timestamps();
	});
snippet sd
	Schema::drop('${1:table}');
