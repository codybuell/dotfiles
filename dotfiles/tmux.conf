# tmux version 3.1b

################################################################################
#                                                                              #
# ENVIRONMENT DETECTION                                                        #
#                                                                              #
# Set some variables based on the os / terminal running.                       #
#                                                                              #
################################################################################

# if enterprise linux family ($DISTRO set in ~/.shell/exports)
if-shell 'if [[ "`echo $DISTRO`" = "entlinux" ]]; then true; else false; fi' \
  'TMUX_COPY_COMMAND="xclip"'

# if debian linux family ($DISTRO set in ~/.shell/exports)
if-shell 'if [[ "`echo $DISTRO`" = "deblinux" ]]; then true; else false; fi' \
  'TMUX_COPY_COMMAND="xclip"'

# if osx ($DISTRO set in ~/.shell/exports)
if-shell 'if [[ "`echo $DISTRO`" = "osx" ]]; then true; else false; fi' \
  'TMUX_COPY_COMMAND="reattach-to-user-namespace pbcopy"'

################################################################################
#                                                                              #
# GENERAL CONFIGS                                                              #
#                                                                              #
################################################################################

# stop printing gibberish at the end of mouse drag due to lack of
# mouse utf8 support in gnome terminal https://github.com/tmux/tmux/issues/816
set-option -g set-clipboard off

# dont wait for escape key as part of a key sequence
set -sg escape-time 0

# capture some more history
set -g history-limit 50000

# don't wrap searches
set-option -w -g wrap-search off

################################################################################
#                                                                              #
# BINDINGS                                                                     #
#                                                                              #
################################################################################

# remap prefix to ctrl + space
unbind-key C-b
set -g prefix C-Space
bind-key Space send-prefix

# use vi navigation and search in scroll mode ctrl-b [
setw -g mode-keys vi
set -g status-keys vi
bind-key -T edit-mode-vi Up send-keys -X history-up
bind-key -T edit-mode-vi Down send-keys -X history-down

# pre-defined sessions ctrl-b [N]
bind-key A source-file ~/.tmux/administration
bind-key D source-file ~/.tmux/development
bind-key L source-file ~/.tmux/logs
bind-key G source-file ~/.tmux/gifcast
bind-key W source-file ~/.tmux/work

# rebind splits so that they open with the same dir
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"

# balance splits
unbind-key h
unbind-key v
bind-key h select-layout even-horizontal
bind-key v select-layout even-vertical

# create new session
bind-key C new-session

################################################################################
#                                                                              #
#  VIM-TMUX-NAVIGATOR SUPPORT                                                  #
#                                                                              #
################################################################################

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R

################################################################################
#                                                                              #
#  COLORS                                                                      #
#                                                                              #
#  Use hex values in quotes or colourNNN, for values run the command:          #
#  `for i in {0..255} ;do printf "\x1b[38;5;${i}mcolour${i}\n"; done`          #
#                                                                              #
################################################################################

# set custom 256 color terminal with italics
set -g default-terminal "tmux-256color"
set -ga terminal-overrides ',xterm-256color:Tc'

# theming
set -w -g window-status-current-style fg=colour1
set -g status-bg colour18
set -g status-fg colour245
set -g pane-border-style bg=default
set -g pane-active-border-style fg=colour1

################################################################################
#                                                                              #
#  MOUSE                                                                       #
#                                                                              #
#  Option + Mouse drag to use terminal native selection, else will enter       #
#  tmux copy mode.                                                             #
#                                                                              #
#  MOUSEDOWN1  --->  MouseDown1         MOUSEDRAG1     --->  MouseDrag1        #
#  MOUSEDOWN2  --->  MouseDown2         MOUSEDRAG2     --->  MouseDrag2        #
#  MOUSEDOWN3  --->  MouseDown3         MOUSEDRAG3     --->  MouseDrag3        #
#  MOUSEUP1    --->  MouseUp1           MOUSEDRAGEND1  --->  MouseDragEnd1     #
#  MOUSEUP2    --->  MouseUp2           MOUSEDRAGEND2  --->  MouseDragEnd2     #
#  MOUSEUP3    --->  MouseUp3           MOUSEDRAGEND3  --->  MouseDragEnd3     #
#  WHEELUP     --->  WheelUp            WHEELDOWN      --->  WheelDown         #
#                                                                              #
#  Each should be conbined with a suffix to id location, Pane, Status, etc.    #
#                                                                              #
################################################################################

set-option -g mouse on

# bind-key -T root WheelUpPane \
#   if-shell -Ft= '#{?pane_in_mode,1,#{mouse_any_flag}}' \
#     'send -Mt=' \
#     'if-shell -Ft= "#{alternate_on}" "send -t= Up" "copy-mode -et="'
# bind-key -T root WheelDownPane \
#   if-shell -Ft = '#{?pane_in_mode,1,#{mouse_any_flag}}' \
#     'send -Mt=' \
#     'if-shell -Ft= "#{alternate_on}"  "send -t= Down" "send -Mt="'

# # unbind all double and tripple clicks
unbind-key -T copy-mode-vi DoubleClick1Pane
unbind-key -T copy-mode-vi TripleClick1Pane
unbind-key -T root DoubleClick1Pane
unbind-key -T root TripleClick1Pane
unbind-key -T copy-mode DoubleClick1Pane
unbind-key -T copy-mode TripleClick1Pane

# stay in copy mode on drag end
unbind-key -T copy-mode-vi MouseDragEnd1Pane

# copy selected text at the end of a mouse click and drag selection
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-no-clear "$TMUX_COPY_COMMAND"

# scroll 3 lines at a time instead of default 5; don't extend dragged selections
bind-key -T copy-mode-vi WheelUpPane select-pane\; send-keys -t'{mouse}' -X clear-selection\; send-keys -t'{mouse}' -X -N 3 scroll-up
bind-key -T copy-mode-vi WheelDownPane select-pane\; send-keys -t'{mouse}' -X clear-selection\; send-keys -t'{mouse}' -X -N 3 scroll-down

# make double and triple click work outside of copy mode (already works inside it with default bindings)
bind-key -T root DoubleClick1Pane if-shell -Ft'{mouse}' '#{alternate_on}' "send-keys -M" "copy-mode -t'{mouse}'; send-keys -t'{mouse}' -X select-word; send-keys -X copy-pipe-no-clear \"$TMUX_COPY_COMMAND\""
bind-key -T root TripleClick1Pane if-shell -Ft'{mouse}' '#{alternate_on}' "send-keys -M" "copy-mode -t'{mouse}'; send-keys -t'{mouse}' -X select-line; send-keys -X copy-pipe-no-clear \"$TMUX_COPY_COMMAND\""

# don't exit copy mode on double or triple click
bind-key -T copy-mode-vi DoubleClick1Pane if-shell -Ft'{mouse}' '#{alternate_on}' "send-keys -M" "copy-mode -t'{mouse}'; send-keys -t'{mouse}' -X select-word; send-keys -X copy-pipe-no-clear \"$TMUX_COPY_COMMAND\""
bind-key -T copy-mode-vi TripleClick1Pane if-shell -Ft'{mouse}' '#{alternate_on}' "send-keys -M" "copy-mode -t'{mouse}'; send-keys -t'{mouse}' -X select-line; send-keys -X copy-pipe-no-clear \"$TMUX_COPY_COMMAND\""

# for those times when C-c and q are not enough
bind-key -T copy-mode-vi Escape send-keys -X cancel

# middle click exit copy mode and paste, in normal mode paste
unbind-key -T root MouseUp2Pane
unbind-key -T copy-mode-vi MouseUp2Pane
bind-key -T root MouseUp2Pane paste-buffer
bind-key -T copy-mode-vi MouseUp2Pane send-keys -X cancel\; paste-buffer

# word delimiters, second option is neccessary to append a ', default is ` -_@'.
set-window-option -g word-separators ' "=,()[]'
set-window-option -ag word-separators "'"

################################################################################
#                                                                              #
# WINDOWING                                                                    #
#                                                                              #
################################################################################

# automatically renumber window numbers on closing a pane (tmux >= 1.7)
set -g renumber-windows on

# start window and pane numbering at 1
set -g base-index 1
set -g pane-base-index 1

# dynamically update iTerm tab and window titles
 set -g set-titles on

# reload config file with ctrl-b r
bind-key r source-file ~/.tmux.conf

# toggle synchronize panes
bind-key S set-window-option synchronize-panes

# define the window title format
set -g set-titles-string "#T : #h > #S > #W"

# don't change tmux's own window titles
# set -w -g automatic-rename off

# send focus events through
set -g focus-events on

# show bells in window titles
set -g window-status-bell-style fg=yellow,bold,underscore

# set the window list format in status bar
set -g window-status-format "#I:#{window_panes} #W#F"
set -g window-status-current-format "#I:#{window_panes} #W#F"
set -g window-status-separator "  "

# flag activity in the window list
setw -g monitor-activity on
setw -g window-status-activity-style bg=colour18,fg=yellow,none

################################################################################
#                                                                              #
# STATUS BAR                                                                   #
#                                                                              #
################################################################################

# status bar left side
set-option -g status-left-length 100
set-option -g status-left ' #S   ⧉ #I/#{session_windows} ⊞ #P/#{window_panes}   '

# status bar right side
set-option -g status-right-length 100
# if you are running a version of osx prior to sierra you will need to change $3 to $2 in the awk below
set-option -g status-right "#([ `pmset -g batt | grep -c 'InternalBattery'` -gt 0 ] && pmset -g batt | awk 'NR==2 {gsub(/;/,\"\");print \"   \"$3}')   %H:%M #(date -u '+%%H:%%M %%d-%%b-%%y') "
