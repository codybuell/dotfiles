#
# exports
#

# environment detection
case `uname` in
  Darwin )
    export DISTRO='osx'
    export TMUX_COPY_COMMAND="reattach-to-user-namespace pbcopy"
    ;;
  Linux )
    [ -f /etc/redhat-release ] && {
      export DISTRO='entlinux'
      export TMUX_COPY_COMMAND="xclip"
    } || {
      export DISTRO='deblinux'
      export TMUX_COPY_COMMAND="xclip"
    }
    ;;
  * )
    export DISTRO='unknown'
    export TMUX_COPY_COMMAND="reattach-to-user-namespace pbcopy"
    ;;
esac

# homebrew
export HOMEBREW_GITHUB_API_TOKEN='{{ GitHubHomebrewAPIToken }}'
export HOMEBREW_NO_AUTO_UPDATE=1

# shell
export HISTTIMEFORMAT="%Y/%m/%d %T "
export HISTFILESIZE=10000
export HISTIGNORE=' *'

# node
export NODE_PATH="/usr/local/lib/node_modules"

# todo.txt
export TODOTXT_CFG_FILE="$HOME/.todo/todo.cfg"
export TODO_ACTIONS_DIR="$HOME/.todo/addons"
export TODOTXT_DEFAULT_ACTION=ls
export TODOTXT_SORT_COMMAND="env LC_COLLATE=C sort -k 2,2 -k 1,1n"

[ `echo $0` = 'bash' ] && {
  # command prompt
  if command -v scutil &> /dev/null; then
    export PS1=" $(scutil --get ComputerName | tr [A-Z] [a-z]):\W \u\\$ "
  else
    export PS1=" `hostname`:\W \u\\$ "
  fi
}

export PAGER=less

if which nvim &> /dev/null; then
  export EDITOR=$(which nvim)
elif [ -x "$HOME/bin/vim" ]; then
  # PATH isn't set yet (.zsh/path depends on this file), so we do this check
  # instead of a simple `export EDITOR=$(which vim)`:
  export EDITOR=$HOME/bin/vim
else
  export EDITOR=vim
fi

case "$(uname)" in
  Darwin*)
    if [ -x /usr/libexec/java_home ]; then
      if /usr/libexec/java_home &> /dev/null ; then
        export JAVA_HOME=$(/usr/libexec/java_home)
      fi
    fi
    ;;
  Linux*)
    export JAVA_HOME=/usr/lib/jvm/jre-1.6.0-openjdk.x86_64
    ;;
esac

# usually this means running on a machine with a statically-linked, hand-built
# tmux (and ncurses)
if [ -d "$HOME/share/terminfo" ]; then
  export TERMINFO=$HOME/share/terminfo
fi

# filename (if known), line number if known, falling back to percent if known,
# falling back to byte offset, falling back to dash
export LESSPROMPT='?f%f .?ltLine %lt:?pt%pt\%:?btByte %bt:-...'

# i = case-insensitive searches, unless uppercase characters in search string
# F = exit immediately if output fits on one screen
# M = verbose prompt
# R = ANSI color support
# S = chop long lines (rather than wrap them onto next line)
# X = suppress alternate screen
export LESS=iFMRSX

# Color man pages.
export LESS_TERMCAP_mb=$'\E[01;31m'
export LESS_TERMCAP_md=$'\E[01;38;5;208m'
export LESS_TERMCAP_me=$'\E[0m'
export LESS_TERMCAP_se=$'\E[0m'
export LESS_TERMCAP_ue=$'\E[0m'
export LESS_TERMCAP_us=$'\E[04;38;5;111m'

# for the benefit of CPAN and potentially others
export FTP_PASSIVE=1

# colour ls listings
export CLICOLOR=true

export GPG_TTY=$(tty)

# lastpass session length (12 hours in seconds)
export LPASS_AGENT_TIMEOUT=43200

# zsh dont show an 'unterminated end of line marker'
# https://unix.stackexchange.com/questions/167582/why-zsh-ends-a-line-with-a-highlighted-percent-symbol
export PROMPT_EOL_MARK=

# node version manager
export NVM_DIR="$HOME/.nvm"

# ripgrep configuration file
export RIPGREP_CONFIG_PATH="$HOME/.rgrc"

# docker
export DOCKER_BUILDKIT=1
