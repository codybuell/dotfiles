#
# complete
#
#
# Options for creating auto completions:
#
#   1. Use existing autocompletion function
#
#    # get copletion func with `complete -p [function to mirror]`
#    # complete -o [options from func] -F [_existing func] [your command]
#    complete -o nospace -F _cd myfuncoralias
#
#  2. Use completio wrapper function
#
#    #make-completion-wrapper <actual completion function> <name of new func.>
#                             <command name> <list supplied arguments>
#    # complete [-o func options] -F <name of new func> <alias or func to wrap>
#    make-completion-wrapper _cd _gotorepo cd ~/Repos/
#    complete -o nospace -F _gotorepo repo
#
#  3. Roll your own
#
#    COMPREPLY: array containing possible completions as a result of your func
#    COMP_WORDS: an array containing individual command arguments typed so far
#    COMP_CWORD: command argument index containing the current cursor position
#    COMP_LINE: the current command line
#
#    Use compgen to build completion list:
#      compgen -W "list of options sep by spaces" -- [string to match against]

# ws alias completion
_gotows() {
  local cur=${COMP_WORDS[COMP_CWORD]}
  COMPREPLY=( $(compgen -W "`eval ls '{{ NonRepoProjects }}'`" -- $cur) )
}
complete -F _gotows ws

# gist alias completion
_gotogist() {
  local cur=${COMP_WORDS[COMP_CWORD]}
  COMPREPLY=( $(compgen -W "`eval ls '{{ GistsPath }}'`" -- $cur) )
}
complete -F _gotogist gist

# repo alias completion
_gotorepos() {
  local cur=${COMP_WORDS[COMP_CWORD]}
  COMPREPLY=( $(compgen -W "`eval ls '{{ ReposPath }}'`" -- $cur) )
}
complete -F _gotorepos repo

# note alias completion
_gotoeditnotes() {
  local cur=${COMP_WORDS[COMP_CWORD]}
  COMPREPLY=( $(compgen -W "`eval ls '{{ NotesFolder }}'`" -- $cur) )
}
complete -F _gotoeditnotes note

# color function completion
_colorcomplete() {
  local cur=${COMP_WORDS[COMP_CWORD]}
  local pre=${COMP_WORDS[COMP_CWORD-1]}
  case $pre in
    set|-s )
      COMPREPLY=( $(compgen -W "`ls ~/.shell/base16-shell/scripts | sed 's/^base16-//;s/.sh$//'`" -- $cur) )
      ;;
    * )
      COMPREPLY=( $(compgen -W "help show sample set `ls ~/.shell/base16-shell/scripts | sed 's/^base16-//;s/.sh$//'`" -- $cur) )
      ;;
  esac
}
complete -F _colorcomplete color
