################################################################################
################################################################################
##                                                                            ##
##  Dotfiles Configuration File                                               ##
##                                                                            ##
##  This configuration file is used to customize your set of dotfiles.        ##
##  Throughout each dotfile are snippets in the format of `{{ VarName }}`     ##
##  that get replaced with the values below when running `make dots` or       ##
##  another make method that calls the `scripts/dots.sh` script.              ##
##                                                                            ##
##  To get started run `make config`, otherwise if you prefer a manual        ##
##  configuration, copy this file to `.config`, fill everything below out,    ##
##  then you are ready to run other make commands.                            ##
##                                                                            ##
################################################################################
################################################################################

################################################################################
#                                                                              #
# Paths to Create                                                              #
#                                                                              #
# You can create unlimited paths, simply increment the variable name.  Paths   #
# are created with the -p flag, so all subdirs will be created as needed. Use  #
# the format:                                                                  #
#                                                                              #
#     PATH[NN] = [path]                                                        #
#                                                                              #
################################################################################


# required directories
PATH00 = /Path/home/Repos                             # repository folder
PATH01 = /Path/home/Gists                             # github gists folder
PATH02 = /Path/home/.mail                             # mutt mail directory
PATH02 = /Path/home/.mail/Home                        # mutt mail directory
PATH04 = /Path/home/.mail/Work                        # mutt mail directory
PATH05 = /Path/home/.mail/Client                      # mutt mail directory


################################################################################
#                                                                              #
# Symlinks to Create                                                           #
#                                                                              #
# You can create unlimited symlinks, simply increment the variable name.       #
# Each symlink should be in the format:                                        #
#                                                                              #
#     SYMLINK[NN] = [source path] [destination path]                           #
#                                                                              #
# Destination parent folders must already exist, use path configs above as     #
# needed. Add or remove SYMLINKNN vars below as needed.                        #
#                                                                              #
# * note that if you need to symlink paths with spaces in their names setup    #
#   custom commands in the next section for them instead.                      #
#                                                                              #
################################################################################


# required symlinks
SYMLINK00 = /Path/home/.vim /Path/home/.config/nvim
SYMLINK01 = /Path/home/.vim/init.vim /Path/home/.vim/vimrc
SYMLINK02 = /usr/local/bin/neomutt /usr/local/bin/mutt


# optional symlinks
SYMLINK03 = /Path/home/Repos/mit/mit /Path/home/.todo/addons/mit


################################################################################
#                                                                              #
# Repositories to Clone                                                        #
#                                                                              #
################################################################################


REPO00 = git@github.com:codybuell/mit.git


################################################################################
##                                                                            ##
##  Environment Variables to Create                                           ##
##                                                                            ##
##  Here you can setup any number of environment variables that will be       ##
##  added to ~/.shell/vars.  The format is ENVVAR_[YOUR ENV VAR].  So for     ##
##  example:                                                                  ##
##                                                                            ##
##    ENVVAR_FOO = BAR     # this will set FOO to BAR                         ##
##                                                                            ##
################################################################################


ENVVAR_FOO = BAR


################################################################################
#                                                                              #
# Custom Commands                                                              #
#                                                                              #
# You can create unlimited custom commands, as with symlinks and paths just    #
# increment the variable name. These commands are run at the very end of       #
# `make dots` after dirs have been setup, symlinks made and dotfiles have      #
# been placed.                                                                 #
#                                                                              #
# * only use single quotes in your commands                                    #
#                                                                              #
################################################################################


COMMAND01 = ln -s '/Volumes/GoogleDrive/My Drive/' '/Path/home/Google Drive'


################################################################################
#                                                                              #
# Personal Information                                                         #
#                                                                              #
################################################################################


Name       = Cody Buell                        # your full name
Email      = cody@codybuell.com                # preferred email
OSUsername = codybuell                         # your system username
IRCNick    = codybuell,bueller                 # your irc nick(s)
OSHomeRoot = /Users/                           # /Users/ on osx /home/ on linux


################################################################################
#                                                                              #
# tpam configurations                                                          #
#                                                                              #
################################################################################


TPAMUrl      = tpam.tld    # do not include protocol (ie no http://)
TPAMUsername = codybuell
TPAMPassword = `command to get password`


################################################################################
#                                                                              #
# vpn configurations                                                           #
#                                                                              #
# This one is going to require a bit more config on your part...               #
#                                                                              #
# 1. Create 'application password' records in OSX Keychain Access, one for     #
#    the vpn password and another for the totp token.                          #
#                                                                              #
#    - open keychain access                                                    #
#    - create new application password                                         #
#    - name / keychain item name = _KeychainVPNUsername setting below          #
#    - account / acount name = _KeychainVPN[Password|Token] settings below     #
#    - password = your email accounts password                                 #
#                                                                              #
# 3. And then configure the following services:                                #
#                                                                              #
#    - passage (pull go repo and build, see projects readme)                   #
#                                                                              #
################################################################################


KeychainVPNUsername =  codybuell
KeychainVPNPassword =  keychainobjectname
KeychainVPNToken    =  keychainobjectname


################################################################################
#                                                                              #
# golang configurations                                                        #
#                                                                              #
# Here we will define our default GOPATH.  It's recommended to provide two     #
# two paths, the first of which where go get will place its sources, the       #
# second being for your own personal packages.  The separation will keep bits  #
# cleaner, but ultimately it's your call.  For monorepos use direnv to         #
# dynamically set the gopath by placing a .envrc with the exports you want to  #
# be executed when working in that workspace.                                  #
#                                                                              #
################################################################################


GoPath = /Path/home/.gopath


################################################################################
#                                                                              #
# email                                                                        #
#                                                                              #
# This one is going to require a bit more config on your part...               #
#                                                                              #
# 1. Edit the following files:                                                 #
#                                                                              #
#    - dotfiles/mbsyncrc                                                       #
#                                                                              #
# 2. Create 'application password' records in OSX Keychain Access              #
#                                                                              #
#    - open keychain access                                                    #
#    - create new application password                                         #
#    - name / keychain item name = _EmailHost setting below                    #
#    - account / acount name = _EmailKeychain setting below                    #
#    - password = your email accounts password                                 #
#    - repeat for both home and work email addresses                           #
#                                                                              #
# 3. And then configure the following services:                                #
#                                                                              #
#    - passage (pull go repo and build, see projects readme)                   #
#                                                                              #
################################################################################


DefaultEmailAccount = client
DefaultEmailAccCaps = Client                    # hacky placeholder solution
DefaultEmailAddress = cody@exchange.com


# expected to be a gmail account ('home' account)
HomeEmailSmtp       = smtp.gmail.com
HomeEmailHost       = imap.gmail.com            # host and 'name' field in keychain
HomeEmailKeychain   = cody+mutt@codybuell.com   # 'account' field in keychain
HomeEmailUsername   = cody@codybuell.com
HomeEmailAddress    = cody@codybuell.com


# expected to be a gmail account ('work' account)
WorkEmailSmtp       = smtp.gmail.com
WorkEmailHost       = imap.gmail.com            # host and 'name' field in keychain
WorkEmailKeychain   = cody+mutt@workplace.com   # 'account' field in keychain
WorkEmailUsername   = cody@workplace.com
WorkEmailAddress    = cody@workplace.com


################################################################################
#                                                                              #
# paths                                                                        #
#                                                                              #
# variable          cli   vim    description                                   #
# ---------------------------------------------------------------------------- #
# TasksFolder       t     -     loc for tasks created by Todo.txt-cli          #
# NotesFolder       note  ␣n    general markdown notes / notes vim wiki        #
# CodexFolder       -     -     personal markdown notes / codex vim wiki       #
# NonRepoProjects   ws    -     projects that are not git repos                #
# PersonalJournal   pj    ␣pj   root location of personal journal*             #
# WorkJournal       wj    ␣wj   root location of work journal*                 #
#                                                                              #
#   * journals have a subdir structure of YYYY/MM/YYYY.MM.DD.txt               #
#                                                                              #
# CDPath works a bit differently, zsh will autocomplete from these locations   #
# when you cd [tab][tab] regardless of where you are in the filesystem.        #
# Separate out each path with a :                                              #
#                                                                              #
################################################################################


TasksFolder     = "/Path/home/Google Drive/Tasks"      # full path, no escapes
NotesFolder     = "~/Google\\ Drive/Notes"
CodexFolder     = "~/Google\\ Drive/Codex"
NonRepoProjects = "~/Google\\ Drive/Projects"
WorkbenchPath   = "~/Google\\ Drive/Workbench" 
PersonalJournal = "/Path/home/Google\\ Drive/Journal/personal"  # full path, escapes
WorkJournal     = "/Path/home/Google\\ Drive/Journal/work"      # full path, escapes

CDPath          = "~/Repos/gitlab.company.com:~/Other/Path"


################################################################################
#                                                                              #
# git configurations                                                           #
#                                                                              #
################################################################################


GitUsername   = codybuell                                # github username
GitSigningKey = 12345678901234567890                     # gpg key to sign commits
ReposPath     = /Path/home/Repos                         # folder for git repos
GistsPath     = /Path/home/Gists                         # folder for git gists


################################################################################
#                                                                              #
# api tokens                                                                   #
#                                                                              #
# GitHubGHIAPIToken -> used for ghi to manage issues from the cli              #
# GitHubHomebrewAPIToken -> used for brew                                      #
# GitHubVimGistToken -> used for vim's gist plugin                             #
# SlackAPIToken -> used for slackcat                                           #
#                                                                              #
################################################################################


GitHubGHIAPIToken = 1234567890abcdefghijklmnopqrstuvwxyz
GitHubHomebrewAPIToken = 1234567890abcdefghijklmnopqrstuvwxyz
GitHubVimGistToken = 1234567890abcdefghijklmnopqrstuvwxyz
SlackAPIToken = 1234-12345678901-12345678901-123456789012-12345678901234567890123456789012


################################################################################
#                                                                              #
# hashicorp vault                                                              #
#                                                                              #
################################################################################


Vault        = false
#VaultCAPath = 
VaultToken   = 1234567890abcdefghijklmnopqrstuvwxyz
VaultAddress = https://vaultserver.tld:8200
VaultServer  = vaultserver.tld


################################################################################
#                                                                              #
# ddclient                                                                     #
#                                                                              #
################################################################################


DDClient         = false
DDClientLogin    = 1234567890abcdef
DDClientPassword = ghijklmnopqrstuv
DDClientFQDN     = hostname.codybuell.com


# vim: ft=conf
